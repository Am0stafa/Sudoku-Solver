{"ast":null,"code":"var _jsxFileName = \"/Users/abdomostafa/Sudoku-Solver/src/App.js\",\n  _s = $RefreshSig$();\nimport Board from \"./components/board\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Controls from \"./components/controls\";\nimport ResultsPopup from \"./components/resultsPopup\";\nimport { checkGrid, solveGrid } from \"./util\";\nimport { makepuzzle } from \"sudoku\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.solveSpeed = 25;\nexport default function App() {\n  _s();\n  const puzzle = makepuzzle().reduce((rows, key, index) => (index % 9 === 0 ? rows.push([key === null ? 0 : key + 1]) : rows[rows.length - 1].push(key === null ? 0 : key + 1)) && rows, []);\n  const [grid, setGrid] = useState(puzzle);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [foundSolution, setFoundSolution] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Sudoku Backtracking Visualization \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      grid: grid,\n      setGrid: setGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      checkGrid: checkGrid,\n      solveGrid: solveGrid,\n      grid: grid,\n      setGrid: setGrid,\n      setOpenPopup: setOpenPopup,\n      setFoundSolution: setFoundSolution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), openPopup ? /*#__PURE__*/_jsxDEV(ResultsPopup, {\n      foundSolution: foundSolution,\n      setOpenPopup: setOpenPopup,\n      setGrid: setGrid,\n      puzzle: puzzle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iOPfAz0QQhRAHTeJ1cVy41KCGTw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","React","useState","Controls","ResultsPopup","checkGrid","solveGrid","makepuzzle","jsxDEV","_jsxDEV","window","solveSpeed","App","_s","puzzle","reduce","rows","key","index","push","length","grid","setGrid","openPopup","setOpenPopup","foundSolution","setFoundSolution","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abdomostafa/Sudoku-Solver/src/App.js"],"sourcesContent":["import Board from \"./components/board\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Controls from \"./components/controls\";\nimport ResultsPopup from \"./components/resultsPopup\";\nimport { checkGrid, solveGrid } from \"./util\";\nimport { makepuzzle } from \"sudoku\";\n\nwindow.solveSpeed = 25;\n\nexport default function App() {\n\n  const puzzle = makepuzzle()\n  .reduce((rows, key, index) => (index % 9 === 0 ? rows.push([key === null ? 0 : key + 1]) : rows[rows.length-1].push(key === null ? 0 : key + 1)) && rows, []);\n\n  const [grid, setGrid] = useState(puzzle);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [foundSolution, setFoundSolution] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1> Sudoku Backtracking Visualization </h1>\n      <Board grid={grid} setGrid={setGrid}></Board>\n      <Controls\n        checkGrid={checkGrid}\n        solveGrid={solveGrid}\n        grid={grid}\n        setGrid={setGrid}\n        setOpenPopup={setOpenPopup}\n        setFoundSolution={setFoundSolution}\n      ></Controls>\n      {openPopup ? (\n        <ResultsPopup\n          foundSolution={foundSolution}\n          setOpenPopup={setOpenPopup}\n          setGrid={setGrid}\n          puzzle={puzzle}\n        ></ResultsPopup>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,SAAS,EAAEC,SAAS,QAAQ,QAAQ;AAC7C,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpCC,MAAM,CAACC,UAAU,GAAG,EAAE;AAEtB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAMC,MAAM,GAAGP,UAAU,CAAC,CAAC,CAC1BQ,MAAM,CAAC,CAACC,IAAI,EAAEC,GAAG,EAAEC,KAAK,KAAK,CAACA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACF,GAAG,KAAK,IAAI,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACA,IAAI,CAACI,MAAM,GAAC,CAAC,CAAC,CAACD,IAAI,CAACF,GAAG,KAAK,IAAI,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,CAAC,KAAKD,IAAI,EAAE,EAAE,CAAC;EAE7J,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAACY,MAAM,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEzD,oBACEO,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CvB,OAAA,CAACT,KAAK;MAACqB,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7CvB,OAAA,CAACN,QAAQ;MACPE,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA,SAAU;MACrBe,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBE,YAAY,EAAEA,YAAa;MAC3BE,gBAAgB,EAAEA;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACXT,SAAS,gBACRd,OAAA,CAACL,YAAY;MACXqB,aAAa,EAAEA,aAAc;MAC7BD,YAAY,EAAEA,YAAa;MAC3BF,OAAO,EAAEA,OAAQ;MACjBR,MAAM,EAAEA;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,GAEhB,EACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAjCuBD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}