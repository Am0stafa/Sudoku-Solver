{"ast":null,"code":"import _slicedToArray from \"/Users/abdomostafa/Sudoku-Solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/abdomostafa/Sudoku-Solver/src/App.js\";\nimport Board from \"./components/board\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Controls from \"./components/controls\";\nimport ResultsPopup from \"./components/resultsPopup\";\nimport { checkGrid, solveGrid } from \"./util\";\nimport { makepuzzle } from \"sudoku\";\nwindow.solveSpeed = 25;\nexport default function App() {\n  var puzzle = makepuzzle().reduce(function (rows, key, index) {\n    return (index % 9 === 0 ? rows.push([key === null ? 0 : key + 1]) : rows[rows.length - 1].push(key === null ? 0 : key + 1)) && rows;\n  }, []);\n\n  var _useState = useState(puzzle),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrid = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openPopup = _useState4[0],\n      setOpenPopup = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      foundSolution = _useState6[0],\n      setFoundSolution = _useState6[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \" Sudoku Backtracking Visualization \"), /*#__PURE__*/React.createElement(Board, {\n    grid: grid,\n    setGrid: setGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Controls, {\n    checkGrid: checkGrid,\n    solveGrid: solveGrid,\n    grid: grid,\n    setGrid: setGrid,\n    setOpenPopup: setOpenPopup,\n    setFoundSolution: setFoundSolution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), openPopup ? /*#__PURE__*/React.createElement(ResultsPopup, {\n    foundSolution: foundSolution,\n    setOpenPopup: setOpenPopup,\n    setGrid: setGrid,\n    puzzle: puzzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }) : \"\");\n}","map":{"version":3,"sources":["/Users/abdomostafa/Sudoku-Solver/src/App.js"],"names":["Board","React","useState","Controls","ResultsPopup","checkGrid","solveGrid","makepuzzle","window","solveSpeed","App","puzzle","reduce","rows","key","index","push","length","grid","setGrid","openPopup","setOpenPopup","foundSolution","setFoundSolution"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,QAArC;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEAC,MAAM,CAACC,UAAP,GAAoB,EAApB;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,MAAM,GAAGJ,UAAU,GACxBK,MADc,CACP,UAACC,IAAD,EAAOC,GAAP,EAAYC,KAAZ;AAAA,WAAsB,CAACA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkBF,IAAI,CAACG,IAAL,CAAU,CAACF,GAAG,KAAK,IAAR,GAAe,CAAf,GAAmBA,GAAG,GAAG,CAA1B,CAAV,CAAlB,GAA4DD,IAAI,CAACA,IAAI,CAACI,MAAL,GAAY,CAAb,CAAJ,CAAoBD,IAApB,CAAyBF,GAAG,KAAK,IAAR,GAAe,CAAf,GAAmBA,GAAG,GAAG,CAAlD,CAA7D,KAAsHD,IAA5I;AAAA,GADO,EAC2I,EAD3I,CAAf;;AAGA,kBAAwBX,QAAQ,CAACS,MAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCjB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOkB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0CnB,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOoB,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,IAAb;AAAmB,IAAA,OAAO,EAAEC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEd,SADb;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,IAAI,EAAEY,IAHR;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,YAAY,EAAEE,YALhB;AAME,IAAA,gBAAgB,EAAEE,gBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAWGH,SAAS,gBACR,oBAAC,YAAD;AACE,IAAA,aAAa,EAAEE,aADjB;AAEE,IAAA,YAAY,EAAED,YAFhB;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,MAAM,EAAER,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAQR,EAnBJ,CADF;AAwBD","sourcesContent":["import Board from \"./components/board\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Controls from \"./components/controls\";\nimport ResultsPopup from \"./components/resultsPopup\";\nimport { checkGrid, solveGrid } from \"./util\";\nimport { makepuzzle } from \"sudoku\";\n\nwindow.solveSpeed = 25;\n\nexport default function App() {\n\n  const puzzle = makepuzzle()\n  .reduce((rows, key, index) => (index % 9 === 0 ? rows.push([key === null ? 0 : key + 1]) : rows[rows.length-1].push(key === null ? 0 : key + 1)) && rows, []);\n\n  const [grid, setGrid] = useState(puzzle);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [foundSolution, setFoundSolution] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1> Sudoku Backtracking Visualization </h1>\n      <Board grid={grid} setGrid={setGrid}></Board>\n      <Controls\n        checkGrid={checkGrid}\n        solveGrid={solveGrid}\n        grid={grid}\n        setGrid={setGrid}\n        setOpenPopup={setOpenPopup}\n        setFoundSolution={setFoundSolution}\n      ></Controls>\n      {openPopup ? (\n        <ResultsPopup\n          foundSolution={foundSolution}\n          setOpenPopup={setOpenPopup}\n          setGrid={setGrid}\n          puzzle={puzzle}\n        ></ResultsPopup>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}